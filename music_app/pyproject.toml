[project]
name = "music-app"
version = "0.1.0"
description = "Music app technical competence assignment."
readme = "README.md"
requires-python = ">=3.13"
dependencies = [ # TODO: Separate the dev requirements "production" requirements.
    "flask>=3.1.0",
    "marshmallow>=3.26.1",
    "pymongo>=4.11.3",
]

[dependency-groups]
dev = [
    "faker>=37.1.0",
    "mongomock>=4.3.0",
    "mypy>=1.15.0",
    "pytest>=8.3.5",
    "ruff>=0.11.4",
]

[build-system]
requires = ["hatchling >= 1.26"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/music_app"]

[project.scripts]
start = "music_app.api:start"

[tool.pytest.ini_options]
pythonpath = "src"
addopts = [
    "--import-mode=importlib",
]

[[tool.mypy.overrides]]
module = ["music_app.*"]
follow_untyped_imports = true

# Start off with these
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true

# Getting these passing should be easy
strict_equality = true
strict_concatenate = true

# Strongly recommend enabling this one as soon as you can
check_untyped_defs = true

# These shouldn't be too much additional work, but may be tricky to
# get passing if you use a lot of untyped libraries
disallow_subclassing_any = true
disallow_untyped_decorators = true
disallow_any_generics = true

# These next few are various gradations of forcing use of type annotations
disallow_untyped_calls = true
disallow_incomplete_defs = true
disallow_untyped_defs = true

# This one isn't too hard to get passing, but return on investment is lower
no_implicit_reexport = true

# This one can be tricky to get passing if you use a lot of untyped libraries
warn_return_any = true
